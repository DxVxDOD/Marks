// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: users.sql

package database

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const create_User = `-- name: Create_User :one
INSERT INTO users (id, created_at, updated_at, email, name, hash, salt)
VALUES ($1, $2, $3, $4, $5, $6, $7)
RETURNING id, created_at, updated_at, email, name, hash, salt
`

type Create_UserParams struct {
	ID        uuid.UUID
	CreatedAt time.Time
	UpdatedAt time.Time
	Email     interface{}
	Name      string
	Hash      []byte
	Salt      []byte
}

func (q *Queries) Create_User(ctx context.Context, arg Create_UserParams) (User, error) {
	row := q.db.QueryRow(ctx, create_User,
		arg.ID,
		arg.CreatedAt,
		arg.UpdatedAt,
		arg.Email,
		arg.Name,
		arg.Hash,
		arg.Salt,
	)
	var i User
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Email,
		&i.Name,
		&i.Hash,
		&i.Salt,
	)
	return i, err
}
